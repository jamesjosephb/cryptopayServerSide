from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, String
from sqlalchemy.orm import sessionmaker
from sqlalchemy import *

# Modeling types converstion https://code-maven.com/slides/python-programming/sqlalchemy-types
# SQLAlchemy documentaion https://docs.sqlalchemy.org/en/13/orm/tutorial.html#creating-a-session
# connection time out doc https://docs.sqlalchemy.org/en/13/dialects/mysql.html
Base = declarative_base()


class User(Base):
    __tablename__ = 'users'
    userid = Column(Integer, primary_key=True)
    username = Column(String(32))
    email = Column(String(64))
    password = Column(String(32))
    #password2 = Column(String(255))
    #passhashmd5 = Column(Boolean(4))
    #enabled = Column(Boolean(4))
    lastseentime = Column(DateTime())
    joinedtime = Column(DateTime())
    #verificationcode = Column(String(32))
    passresetcode = Column(String(32))
    agreetowarranty = Column(DateTime())
    attendantcardagreement = Column(DateTime())
    #shippingfirstname = Column(String(32))
    #shippinglastname = Column(String(32))
    #shippingcompany = Column(String(64))
    #shippingaddress = Column(String(128))
    #shippingcountry = Column(String(32))
    #shippingcity = Column(String(32))
    #shippingstate = Column(String(String(2)))
    #shippingzipcode = Column(String(10))
    phonenumber = Column(String(32))
    #genesys = Column(Boolean(4))
    customername = Column(String(64))
    #flexibility = Column(Boolean(4))
    #trialflags = Column(Integer())

    '''def __repr__(self):
        return "<User(name='%s', fullname='%s', nickname='%s')>" % (
            self.name, self.fullname, self.nickname)'''

class Site(Base):
    __tablename__ = 'sites'

    siteid = Column(String(16), primary_key=True)
    owneruserid = Column(Integer(), primary_key=True)
    sitename = Column(String(32))
    oldaddress = Column(String(256))
    timezone = Column(String(32))
    address1 = Column(String(256))
    address2 = Column(String(256))
    city = Column(String(32))
    state = Column(String(32))
    zip = Column(String(8))
    ip = Column(String(16))
    lastip = Column(String(16))
    notes = Column(String(256))
    setupcomplete = Column(Boolean(1))
    nextid = Column(String(16))
    diagnostics = Column(Boolean(1))
    diagnosticslogin = Column(Boolean(1))
    coordlock = Column(Boolean(1))
    swiperlock = Column(Boolean(1))
    reflashlock = Column(Boolean(1))
    mac = Column(String(20))
    holdcharge = Column(Integer())
    merchantpw = Column(String(14))
    serveraddress = Column(String(32))
    storedpurch = Column(Integer())
    youngestblock = Column(Integer)
    mqxversion = Column(String(16))
    zbcversion = Column(String(16))
    swversion = Column(String(16))
    crccarddb = Column(String(20))
    crccarddbcmd = Column(String(20))
    sitetype = Column(Integer())
    flcardver = Column(Boolean())
    server = Column(String(20))



if __name__ == '__main__':
    engine = create_engine("config.mysqlLogin")
    Session = sessionmaker(bind=engine)
    session = Session()

    for instance in session.query(Site):
        if instance.owneruserid == 809:
            print(instance.siteid)

    '''for instance in session.query(User).order_by(User.userid):
            print(instance.passhashmd5, instance.username)'''